# head(NTUSD)
positive = NTUSD[[1]]
negative = NTUSD[[2]]
insertwords(positive)
install.packages("Rwordseg",repos="http://R-Forge.R-project.org")
install.packages("~/Library/Mobile Documents/com~apple~CloudDocs/edin-courses/输入/R/rpackages/Rwordseg/R/Rwordseg", repos = NULL)
library(Rwordseg)
install.packages("~/Library/Mobile Documents/com~apple~CloudDocs/edin-courses/输入/R/rpackages/Rwordseg/R/Rwordseg", repos = NULL)
library(Rwordseg)
library(Rwordseg)
install.packages("rJava")  #Rwordseg的依赖
install.packages("rJava")
install.packages("Rwordseg")
install.packages("rJava")
library(tmcn)
library(Rwordseg)
install.packages("Rwordseg",repos="http://R-Forge.R-project.org")
install.packages("rJava")
library(Rwordseg)
install.packages("~/Library/Mobile Documents/com~apple~CloudDocs/edin-courses/输入/R/rpackages/Rwordseg/R/Rwordseg", repos = NULL)
library(Rwordseg)
install.packages("Rwordseg",repos="http://R-Forge.R-project.org")
?rJava
??rJava
Sys.setenv(JAVA_HOME="/Applications/Java")
#/Applications/Java /Applications/Java/JavaVirtualMachines/jdk-14.0.1.jdk
Sys.setenv(JAVA_HOME="/Applications/Java")
install.packages("rJava")
?rJava
install.packages("Rwordseg",repos="http://R-Forge.R-project.org")
install.packages("Rwordseg")
install.packages("Rwordseg")
library(Rwordseg)
library(tmcn)
x = c('rvest','stringr','httr','tmcn','qdap','Rwordseg',
'tm','plyr','wordcloud2','tidyverse','Ismeans')
lapply(x,require,character.only=TRUE)
for (k in 1:100){
webcode = GET(url[k])
# webcode =  RETRY("GET", url[k])
Sys.sleep(runif(1,2,3))
save(webcode,file = paste0("web",k,".Rdata"))
}
load("/Users/lujiawen/Desktop/crawler/web98.Rdata")
View(webcode)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertwords(positive) #给中文分词
library(tmcn)
library(Rwordseg)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertwords(positive) #给中文分词
x = c('rvest','stringr','httr','tmcn','qdap','Rwordseg',
'tm','plyr','wordcloud2','tidyverse','Ismeans')
lapply(x,require,character.only=TRUE)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertwords(positive) #给中文分词
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(sentence,returnType = "vector")
webdata = data.frame()
for (i in 1:100){
load(paste0("web",i,".Rdata"))
title = read_html(webdata)%>%html_nodes('a.j_th_tit')%>%html_text()
comment = read_html(webdata)%>%html_nodes('span.threadlist_rep_num.center_text')%>%html_text()
lastcom = read_html(webdata)%>%html_nodes('.j_reply_data')%>%html_text()%>%str_extract_all('\\d+[:|-]\\d+')%>%unlist()
lastcom = gsub('\\d+:\\d+','5-31',lastcom)
webdata = rbind(webdata,data.frame(comment,title,lastcom,stringsAsFactors = FALSE) )
}
webdata = data.frame()
for (i in 1:100){
load(paste0("web",i,".Rdata"))
title = read_html(webcode)%>%html_nodes('a.j_th_tit')%>%html_text()
comment = read_html(webcode)%>%html_nodes('span.threadlist_rep_num.center_text')%>%html_text()
lastcom = read_html(webcode)%>%html_nodes('.j_reply_data')%>%html_text()%>%str_extract_all('\\d+[:|-]\\d+')%>%unlist()
lastcom = gsub('\\d+:\\d+','5-31',lastcom)
webdata = rbind(webdata,data.frame(comment,title,lastcom,stringsAsFactors = FALSE) )
}
head(webdata)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(sentence,returnType = "vector")
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(webdata$title,returnType = "vector")
head(transfer_senten1)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(webdata$title,returnType = "vector")
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(webdata$title,returnType = "vector")
head(transfer_senten1)
head(transfer_senten1)
head(transfer_senten1)
kk = table(sentiment_data$valence)%>%as.data.frame()
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive_simple),sum)
neg.weight = sapply(llply(x,fun,negative_simple),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
head(getEmotionalType())
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive_simple),sum)
neg.weight = sapply(llply(x,fun,negative_simple),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive),sum)
neg.weight = sapply(llply(x,fun,negative),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(sentence,score,webdata$comment)%>%
mutate(valence-case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
head(webdata)
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive),sum)
neg.weight = sapply(llply(x,fun,negative),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(webdata$title,score,webdata$comment_num)%>%
mutate(valence-case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
webdata = data.frame()
for (i in 1:100){
load(paste0("web",i,".Rdata"))
title = read_html(webcode)%>%html_nodes('a.j_th_tit')%>%html_text()
comment_num = read_html(webcode)%>%html_nodes('span.threadlist_rep_num.center_text')%>%html_text()
lastcom = read_html(webcode)%>%html_nodes('.j_reply_data')%>%html_text()%>%str_extract_all('\\d+[:|-]\\d+')%>%unlist()
lastcom = gsub('\\d+:\\d+','5-31',lastcom)
webdata = rbind(webdata,data.frame(comment_num,title,lastcom,stringsAsFactors = FALSE) )
}
head(webdata)
data(NTUSD)
# head(NTUSD)
positive = NTUSD[[1]] #通过tmcn拉取情绪语料库
negative = NTUSD[[2]]
insertWords(positive) #给中文分词，把积极词汇分为一个词
insertWords(nagetive)
transfer_senten1 = segmentCN(webdata$title,returnType = "vector")
head(transfer_senten1)
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive),sum)
neg.weight = sapply(llply(x,fun,negative),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(webdata$title,score,webdata$comment_num)%>%
mutate(valence-case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
#
kk = table(sentiment_data$valence)%>%as.data.frame()
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive),sum)
neg.weight = sapply(llply(x,fun,negative),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(webdata$title,score,webdata$comment_num)%>%
mutate(valence-case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(webdata$title,score,webdata$comment_num)%>%
mutate(valence=case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
head(sentiment_data)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Emotion,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x="Emotion",y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
scale_fill_brewer(palette="Dark2")
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
scale_color_brewer(palette="Dark2")
x = c('rvest','stringr','httr','tmcn','qdap','Rwordseg',
'tm','plyr','wordcloud2','tidyverse','Ismeans',"wesanderson")
lapply(x,require,character.only=TRUE)
install.packages("wesanderson")
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))+
theme_bw()+scale_color_brewer(palette = 'Set2')
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))+
geom_bar()+
theme_bw()+scale_color_brewer(palette = 'Set2')
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))+
theme_bw()+scale_color_brewer(palette = 'Set2')
library(wesanderson)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity")+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
install.packages("RColorBrewer"
library(RColorBrewer)
install.packages("RColorBrewer")
library(RColorBrewer)
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Set2")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Set2")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)+
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
brewer.pal.info
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Set2")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "RdPu")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Blue")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Blues")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
# PuBuGn
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "OrRd")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
# PuBuGn
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "Reds")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
# PuBuGn
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = hue_pal()(4)[1], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = hue_pal()(4)[1], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
brewer.pal.info
#
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
# visualization & chiq.test
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
chisq.test(kk)
# visualization & chiq.test
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
chisq.test(kk$Freq)
# statistics
## chiq.test
chisq.test(kk$Freq)
aov = aov( webdata$comment_num  ~ score ,data=kk)
?anova
# statistics
## chiq.test
chisq.test(kk$Freq)
?anova
aov = aov(score~webdata$comment_num  ,data=kk)
# statistics
## chiq.test
chisq.test(kk$Freq)
?anova
##anova
### 正态检验&qqplot
### 方差齐性检验
leveneTest(sentiment_data$valence~webdata$comment_num  ,data=kk)
aov = aov(sentiment_data$valence~webdata$comment_num  ,data=kk)
aov = aov(sentiment_data$valence~webdata$comment_num,data=kk)
aov = aov(sentiment_data$valence,data=kk)
aov = aov(valence,data=kk)
aov = aov(data=kk)
aov = aov(kk)
aov = aov(kk$Var1~kk$Freq)
summary(aov)
aov = aov(kk$Var1~kk$Freq)
summary(aov)
aov = aov(kk$Var1)
aov = aov(valence~comment_num,data=sentiment_data)
head(sentiment_data)
length(valence)
length(sentiment_data$valence)
length(sentiment_data$comment_num)
length(sentiment_data$webdat$comment_num)
length(webdata$comment_num)
fun = function(x,y) x%in%y
getEmotionalType = function(x,pwords,nwords){
pos.weight = sapply(llply(x,fun,positive),sum)
neg.weight = sapply(llply(x,fun,negative),sum)
total = pos.weight - neg.weight
return(data.frame(pos.weight,neg.weight,total))
}
###################caculate sentiment score
score = getEmotionalType(transfer_senten1,positive,negative)
sentiment_data = data.frame(title=webdata$title,score,comment_num=webdata$comment_num)%>%
mutate(valence=case_when(
total>0~"Pos",
total<0~"Neg",
TRUE ~ "Neu"
))
head(sentiment_data)
length(sentiment_data$comment_num)
aov = aov(valence~comment_num,data=sentiment_data)
aov = aov(valence~comment_num,data=sentiment_data)
aov = aov(comment_num~valence,data=sentiment_data)
summary(aov)
install.packages("~/Downloads/心理学词汇大全【官方推荐】.scel", repos = NULL)
View(transfer_senten1)
View(transfer_senten1)
View(sentiment_data)
View(sentiment_data)
View(webdata)
View(webdata)
# visualization
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2], width = 0.6)+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
# visualization
kk = table(sentiment_data$valence)%>%as.data.frame()
ggplot(kk, aes(x=Var1,y=Freq))+
geom_bar(stat = "identity",fill = brewer.pal(7, "PuBuGn")[2])+
geom_text(data = kk, aes(y=Freq,label=Freq),vjust=-0.5)
#scale_color_manual(values=wes_palette(n=3, name="GrandBudapest"))
#theme_bw()+scale_color_brewer(palette = 'Set2')
library(quantmod)
x = c('quantmod','TTR','PerformanceAnalytics','ggplot2','scales')
lapply(x,require,character.only=TRUE)
install.packages("quantmod")
install.packages("TTR")
```{r}
install.packages("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
options(stringsAsFactors = FALSE)
symbols<-c("^GSPC","^N225","^HSI","^STI","000001.SS")
suppressWarnings(getSymbols(symbols,src = "yahoo",from="2012-01-01"))
library(quantmod)
suppressWarnings(getSymbols(symbols,src = "yahoo",from="2012-01-01"))
options(stringsAsFactors = FALSE)
symbols<-c("^GSPC","^N225","^HSI","^STI","000001.SS")
suppressWarnings(getSymbols(symbols,src = "yahoo",from="2016-01-01"))
options(stringsAsFactors = FALSE)
symbols<-c("GSPC","N225","HSI","STI","000001.SS")
suppressWarnings(getSymbols(symbols,src = "yahoo",from="2016-01-01"))
